import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.linear_model import LinearRegression
from sklearn.preprocessing import PolynomialFeatures
from sklearn.metrics import mean_squared_error, r2_score
from sklearn.model_selection import train_test_split


# Linear Regression - Boston Housing

print("\nðŸ“˜ LINEAR REGRESSION ON BOSTON HOUSING DATASET")

boston = pd.read_csv("Boston housing dataset.csv")

X = boston[['RM']]  
y = boston['MEDV']


X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
lr = LinearRegression()
lr.fit(X_train, y_train)
y_pred = lr.predict(X_test)


plt.figure(figsize=(12, 5))
plt.subplot(1, 2, 1)
plt.scatter(X_test, y_test, color='blue', label='Actual')
plt.plot(X_test, y_pred, color='red', label='Predicted')
plt.xlabel('Average number of rooms [RM]')
plt.ylabel('House Price ($1000s)')
plt.title('Linear Regression - Boston Housing')
plt.legend()


print(f"RÂ² Score: {r2_score(y_test, y_pred):.4f}")
print(f"MSE: {mean_squared_error(y_test, y_pred):.2f}")


# Polynomial Regression - Auto MPG



print("\nðŸš— POLYNOMIAL REGRESSION ON AUTO MPG DATASET")

Mpg = pd.read_csv("auto-mpg.csv")

Mpg = Mpg[Mpg['horsepower'] != '?']
Mpg['horsepower'] = Mpg['horsepower'].astype(float)

X = Mpg[['horsepower']].astype(float)  
y = Mpg['mpg']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)


poly = PolynomialFeatures(degree=2)
X_train_poly = poly.fit_transform(X_train)
X_test_poly = poly.transform(X_test)

model = LinearRegression()
model.fit(X_train_poly, y_train)
y_pred = model.predict(X_test_poly)


print(f"RÂ² Score: {r2_score(y_test, y_pred):.4f}")
print(f"MSE: {mean_squared_error(y_test, y_pred):.2f}")


plt.subplot(1, 2, 2)
plt.scatter(X_test, y_test, color='blue', label='Actual')
x_range = np.linspace(X.min(), X.max(), 200).reshape(-1, 1)
plt.plot(x_range, model.predict(poly.transform(x_range)), color='red', label='Polynomial Fit')
plt.xlabel('Horsepower')
plt.ylabel('MPG')
plt.title('Polynomial Regression - Auto MPG')
plt.legend()
plt.tight_layout()
plt.show()
